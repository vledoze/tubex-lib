# ==================================================================
#  tubex-lib - cmake configuration file
# ==================================================================

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/mathjax_stmaryrd.js DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/mathjax_stmaryrd.js
        DESTINATION share/doc/${CMAKE_PROJECT_NAME}
        OPTIONAL)

# Technical API documentation (Doxygen)

  find_package(Doxygen)

  if(NOT DOXYGEN_FOUND)

    message(STATUS "Doxygen not found, not able to generate/install the API documentation.")

  else()

    # Includes CMake commands in config file:
    configure_file(api/Doxyfile.in api/Doxyfile)

    set(DOXYGEN_INPUT ${CMAKE_CURRENT_BINARY_DIR}/api/Doxyfile)
    set(DOXYGEN_OUTPUT ${APIDOC_DIR}/html/index.html)

    if(WIN32)
      set(NULL_DEST NUL 2>&1)
    else()
      set(NULL_DEST "/dev/null")
    endif()

    add_custom_target(api
                      COMMAND ${CMAKE_COMMAND} -E echo_append "Building API Documentation... "
                      COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_INPUT} > ${NULL_DEST}
                      COMMAND ${CMAKE_COMMAND} -E echo "done."
                      )

    install(DIRECTORY ${CMAKE_BINARY_DIR}/doc/api/html 
            DESTINATION share/doc/${CMAKE_PROJECT_NAME}/api
            OPTIONAL)

  endif()

# User manual (Sphinx)

  # Add the cmake folder so the FindSphinx module is found
  set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/doc" ${CMAKE_MODULE_PATH})

  find_package(Sphinx)

  if(NOT SPHINX_FOUND)

    message(STATUS "Sphinx not found, not able to generate/install the manual.")

  else()

    # Includes CMake commands in config file:
    configure_file(doc/conf.py.in ${CMAKE_CURRENT_BINARY_DIR}/doc/conf.py)

    set(SPHINX_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/doc)
    set(SPHINX_BUILD ${CMAKE_CURRENT_BINARY_DIR}/doc)

    # Copying _static files of Sphinx to build directories
    foreach(static_file ${CMAKE_CURRENT_SOURCE_DIR}/doc/_static/)
      file(COPY ${static_file} DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/doc/_static/)
    endforeach()

    # todo: the SPHINX_EXECUTABLE is already set by FindSphinx.cmake:
    # check that it works without the following overload for Win and Linux:
    if(WIN32)
      set(SPHINX_EXECUTABLE "sphinx-build")
    else()
      set(SPHINX_EXECUTABLE "python3" "-msphinx")
    endif()

    add_custom_target(doc
                      COMMAND
                      ${SPHINX_EXECUTABLE} -b html
                      # Specifying path to conf.py generated by CMake:
                      -c ${CMAKE_CURRENT_BINARY_DIR}/doc/
                      ${SPHINX_SOURCE} ${SPHINX_BUILD}
                      WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
                      COMMENT "Generating documentation with Sphinx")

    install(DIRECTORY ${SPHINX_BUILD}
            DESTINATION share/doc/${CMAKE_PROJECT_NAME}
            OPTIONAL)

  endif()