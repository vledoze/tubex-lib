# ==================================================================
#  tubex-lib - cmake configuration file
# ==================================================================

add_subdirectory(core)
add_subdirectory(robotics)
add_subdirectory(3rd) # 3rd party (todo: make a clean dependency)

# todo: specify minimum version of IBEX (in Requires field):


# Generating PKG file
# ===================

set(TUBEX_PKG_CONFIG_FILE ${CMAKE_CURRENT_BINARY_DIR}/tubex.pc)

set(TUBEX_PKG_CONFIG_CFLAGS "-I\${includedir}/ibex -I\${includedir}/tubex -I\${includedir}/tubex-rob -I\${includedir}/tubex-pyibex")
set(TUBEX_PKG_CONFIG_LIBS "-L\${libdir} -ltubex -ltubex-rob -ltubex-pyibex")

if(WITH_CAPD)
  set(TUBEX_PKG_CONFIG_CFLAGS "${TUBEX_PKG_CONFIG_CFLAGS} -I\${includedir}/tubex-ode")
  set(TUBEX_PKG_CONFIG_LIBS "${TUBEX_PKG_CONFIG_LIBS} -ltubex-ode")
endif()

set(TUBEX_PKG_CONFIG_LIBS "${TUBEX_PKG_CONFIG_LIBS} -ltubex") # Seems to be needed

file(GENERATE OUTPUT ${TUBEX_PKG_CONFIG_FILE}
              CONTENT "prefix=${CMAKE_INSTALL_PREFIX}
includedir=\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}
libdir=\${prefix}/${CMAKE_INSTALL_LIBDIR}

Name: tubex
Description: ${PROJECT_DESCRIPTION}
Url: ${PROJECT_HOMEPAGE_URL}
Version: ${PROJECT_VERSION}
Requires: ibex
Cflags: ${TUBEX_PKG_CONFIG_CFLAGS}
Libs: ${TUBEX_PKG_CONFIG_LIBS}")

install(FILES ${TUBEX_PKG_CONFIG_FILE} DESTINATION ${CMAKE_INSTALL_PKGCONFIG})


# Generating tubex-config.cmake file
# ==================================

set(TUBEX_CMAKE_CONFIG_FILE ${CMAKE_CURRENT_BINARY_DIR}/tubex-config.cmake)

file(WRITE ${TUBEX_CMAKE_CONFIG_FILE}
           "# Try to find Tubex
# This file has been generated by CMake

find_path(TUBEX_INCLUDE_DIR tubex.h
          PATH_SUFFIXES include/tubex)
find_path(TUBEX_ROB_INCLUDE_DIR tubex-rob.h
          PATH_SUFFIXES include/tubex-rob)
find_path(TUBEX_PYIBEX_INCLUDE_DIR tubex-pyibex.h
          PATH_SUFFIXES include/tubex-pyibex)

find_library(TUBEX_LIBRARY NAMES tubex
             PATH_SUFFIXES lib)
find_library(TUBEX_ROB_LIBRARY NAMES tubex-rob
             PATH_SUFFIXES lib)
find_library(TUBEX_PYIBEX_LIBRARY NAMES tubex-pyibex
             PATH_SUFFIXES lib)

set(TUBEX_VERSION ${PROJECT_VERSION})
set(TUBEX_LIBRARIES \${TUBEX_LIBRARY} \${TUBEX_ROB_LIBRARY} \${TUBEX_PYIBEX_LIBRARY})
set(TUBEX_INCLUDE_DIRS \${TUBEX_INCLUDE_DIR} \${TUBEX_ROB_INCLUDE_DIR} \${TUBEX_PYIBEX_INCLUDE_DIR})

set(TUBEX_C_FLAGS \"${CMAKE_C_FLAGS}\")
set(TUBEX_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\")
")

if((CMAKE_BUILD_TYPE MATCHES Debug) AND (NOT MSVC))
# If Tubex is built in Debug, -pg (added by Ibex at the time of Tubex 
# compilation) might be also necessary to be able to successfully build 
# programs in Release (otherwise it would be only added by Ibex if the program 
# is built in Debug)...
file(APPEND ${TUBEX_CMAKE_CONFIG_FILE} "
set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -pg\")
")
endif()

if(WITH_CAPD)

  file(APPEND ${TUBEX_CMAKE_CONFIG_FILE} "

  # Optional 3rd party:

  find_path(TUBEX_ODE_INCLUDE_DIR tubex-ode.h
            PATH_SUFFIXES include/tubex-ode)
  set(TUBEX_INCLUDE_DIRS \${TUBEX_INCLUDE_DIRS} \${TUBEX_ODE_INCLUDE_DIR})

  find_library(TUBEX_ODE_LIBRARY NAMES tubex-ode
               PATH_SUFFIXES lib)
  set(TUBEX_LIBRARIES \${TUBEX_LIBRARIES} \${TUBEX_ODE_LIBRARY})
  ")

endif()

install(FILES ${TUBEX_CMAKE_CONFIG_FILE} DESTINATION ${CMAKE_INSTALL_CMAKE})